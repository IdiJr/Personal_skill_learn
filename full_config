#!/usr/bin/env bash
# Installs all required services on server and setup config files with all
# necessary changes.

# Updates and Installs nginx on server
sudo apt-get -y update
sudo apt-get install -y nginx

# allows nginx on firewall
sudo ufw allow 'Nginx HTTP'

# writes hello world into te html file
echo "Hello World!" | sudo tee /var/www/html/index.html

# Overwrites the contents of /redirect_me. Redirects to my github page
echo "https://github.com/IdiJr" | sudo tee /var/www/html/redirect_me

new_string="server_name _;\n\trewrite ^\/redirect_me https:\/\/github.com\/IdiJr permanent;"
sudo sed -i "s/server_name _;/$new_string/" /etc/nginx/sites-enabled/default

# Creating a 404 Custom error page
echo "Ceci n'est pas une page" | sudo tee /var/www/html/404.html
new_string="listen 80 default_server;\n\terror_page 404 \/404.html;\n\tlocation = \/404.html {\n\t\troot \/var\/www\/html;\n\t\tinternal;\n\t}"

sudo sed -i "s/listen 80 default_server;/$new_string/" /etc/nginx/sites-enabled/default

# Testing configurations for syntax errors
sudo nginx -t

# creates a custom HTTP response header
sudo sed -i "/server_name _/a \tadd_header X-Served-By $HOSTNAME;" /etc/nginx/sites-enabled/default

# Setup the Nginx server to listen to port 80
# Creates a link between sites-available and sites-enabled
sudo ln -sf /etc/nginx/sites-enabled/default /etc/nginx/sites-available/default

# A script that installs and configures HAProxy
# install HAProxy
sudo apt-get -y install haproxy

# Enable HAProxy load balancer to start automatically on system boots
echo "ENABLED=1" | sudo tee -a /etc/default/haproxy

# Edits in haproxy config file
haproxy_config=\
"
frontend frontendserver
	bind *:80
	mode http
	default_backend mywebservers
backend mywebservers
	balance roundrobin
	server 269243-web-01 54.197.128.204:80 check
	server 269243-web-02 54.221.183.68:80 check
"
echo "$haproxy_config" | sudo tee -a /etc/haproxy/haproxy.cfg

# Restarts the following services:
# nginx, haproxy, 
sudo service nginx restart
sudo service haproxy restart

# Installs and configures ufw firewall to block all incoming traffic except TCP
# ports 22 (SSH), 443 (HTTPS SSL), and 80 (HTTP)

# Updates the system and installs ufw firewall
sudo apt-get install ufw -y

# Configures the ufw to allow the stated ports
sudo ufw allow 80/tcp
sudo ufw allow 443/tcp
sudo ufw allow 22/tcp

# Sets the default action for incoming traffic to "deny"
sudo ufw default deny incoming

# Enable ufw after configurations
sudo ufw enable
